package gregtech.api.objects.elementalmatter;import java.util.ArrayList;public class GT_EM_Utility {    public static double speedOfLight = 299792458d;// m/s   // 1 а. е. м. = 931,494    public static double convertMEVtoAMU(double aMEV){        return aMEV/931.494d;    }    public static GT_ComplexParticleStack[] getParticleDecay(GT_ComplexParticleStack aParticle, String aDecay){        if(aParticle.mType==GT_ComplexParticleTypes.nuclide){            switch (aDecay){                case "a":                    if(aParticle.getNeutronCount()<=2||aParticle.getProtonCount()<=2)                        return null;                    return new GT_ComplexParticleStack[]{getAtom(aParticle.getProtonCount()-2,aParticle.getNeutronCount()-2, aParticle.getProtonCount()+aParticle.getNeutronCount()),getAtom(2,2,0)};                case "b-":                    return new GT_ComplexParticleStack[]{getAtom(aParticle.getNeutronCount()-1,aParticle.getProtonCount()+1,aParticle.getElectronCount()),new GT_ComplexParticleStack(new GT_ComplexParticle(new GT_ElementaryParticleStack(GT_ElementaryParticle.electron,1)),1),new GT_ComplexParticleStack(new GT_ComplexParticle(new GT_ElementaryParticleStack(GT_ElementaryParticle.electronAntiNeutrino,1)),1)};                case "b+":                    return new GT_ComplexParticleStack[]{getAtom(aParticle.getNeutronCount()+1,aParticle.getProtonCount()-1,aParticle.getElectronCount()),new GT_ComplexParticleStack(new GT_ComplexParticle(new GT_ElementaryParticleStack(GT_ElementaryParticle.positron,1)),1),new GT_ComplexParticleStack(new GT_ComplexParticle(new GT_ElementaryParticleStack(GT_ElementaryParticle.electronNeutrino,1)),1)};            }        }        return null;    }    public static GT_ComplexParticleStack getAtom(int aN, int aZ, int aE){        return GT_ComplexParticleStack.loadFromString("a:huud,"+aZ+":hudd,"+aN+":pe,"+aE+";144000;1");    }}